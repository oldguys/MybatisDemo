<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.oldguy.example.modules.modal.dao.jpas.TestEntity1Mapper">

    <sql id="table_name">test_entity_1</sql>

    <sql id="all_entity_columns">
 	 ${prefix}.version,
	 ${prefix}.brand_sequence,
	 ${prefix}.modal_sequence,
	 ${prefix}.sequence,
	 ${prefix}.id,
	 ${prefix}.create_time,
	 ${prefix}.status
	 </sql>

    <select id="findByPage" resultType="TestEntity1">
        SELECT
        <include refid="all_entity_columns">
            <property name="prefix" value="a"/>
        </include>
        FROM
        <include refid="table_name"/> a
        <where>
            <if test="form.status != null">
                AND a.`status` = #{form.status}
            </if>
            <if test="form.startTime != null ">
                AND a.create_time &gt; #{form.startTime}
            </if>
            <if test="form.endTime != null ">
                AND a.create_time &lt; #{form.endTime}
            </if>
        </where>
        <choose>
            <when test="form.sort != null and form.sort == 1">
                ORDER BY a.id DESC
            </when>
            <when test="form.sort != null and form.sort == 0">
                ORDER BY a.id ASC
            </when>
            <otherwise>
                ORDER BY a.id DESC
            </otherwise>
        </choose>
    </select>


    <select id="findOne" parameterType="long" resultType="TestEntity1">
        SELECT
        <include refid="all_entity_columns">
            <property name="prefix" value="a"/>
        </include>
        FROM
        <include refid="table_name"/>
        a
        WHERE
        id = #{id}
    </select>

    <select id="findAllByStatus" parameterType="int" resultType="TestEntity1">
        SELECT
        <include refid="all_entity_columns">
            <property name="prefix" value="a"/>
        </include>
        FROM
        <include refid="table_name"/> a
        <where>
            <choose>
                <when test="status != null">
                    `status` = #{status}
                </when>
            </choose>
        </where>
    </select>

    <update id="update" parameterType="TestEntity1">
        UPDATE
        <include refid="table_name"/>
        SET
        
 	 version = #{version},
	 brand_sequence = #{brandSequence},
	 modal_sequence = #{modalSequence},
	 sequence = #{sequence},
	 status = #{status}
	 
        WHERE
        id = #{id}
    </update>

    <update id="updateBatch" >
        <foreach collection="collection" item="item" separator=";">
            UPDATE
            <include refid="table_name"/>
            SET
            
 	 version = #{item.version},
	 brand_sequence = #{item.brandSequence},
	 modal_sequence = #{item.modalSequence},
	 sequence = #{item.sequence},
	 status = #{item.status}
	 
            WHERE
            id = #{item.id}
        </foreach>
    </update>

    <update id="updateStatus">
        UPDATE
        <include refid="table_name"/>
        SET
        `status` = #{status}
        WHERE
        id = #{id}
    </update>

    <insert id="save" keyProperty="id" useGeneratedKeys="true" parameterType="TestEntity1">
        INSERT
        <include refid="table_name"/>
        (
 	 version,
	 brand_sequence,
	 modal_sequence,
	 sequence,
	 create_time,
	 status
	 )
        VALUES
        (
 	 #{version},
	 #{brandSequence},
	 #{modalSequence},
	 #{sequence},
	 #{createTime},
	 #{status}
	 )
    </insert>

    <insert id="saveBatch" keyProperty="id" useGeneratedKeys="true" parameterType="TestEntity1">
        INSERT
        <include refid="table_name"/>
        (
 	 version,
	 brand_sequence,
	 modal_sequence,
	 sequence,
	 create_time,
	 status
	 )
        VALUES
        <foreach collection="collections" item="item" separator=",">
        (
 		 #{item.version},
		 #{item.brandSequence},
		 #{item.modalSequence},
		 #{item.sequence},
		 #{item.createTime},
		 #{item.status}
	 )
        </foreach>
    </insert>
</mapper>